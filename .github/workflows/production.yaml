name: Production Testing and Docker Image CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
      - name: Integration tests
        run: NODE_ENV=test npm run test:integration

  test-unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Unit tests
        run: NODE_ENV=test npm run test:unit

  test-integration:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Unit tests
        run: NODE_ENV=test npm run test:integration

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        run: |
          docker buildx create --use
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:prod .
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:latest .
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:${{ github.sha }}

  deploy:
    needs: [build, test-unit, test-integration, push]
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: default
          manifests: |
            k8s/prod/deployment.yaml
            k8s/prod/ingress.yaml
            k8s/prod/service.yaml
            k8s/prod/hpa.yaml
          images: |
            ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:${{ github.sha }}

name: Production Testing and Docker Image CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test-unit:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Unit tests
        run: NODE_ENV=test npm run test:unit

  test-integration:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Unit tests
        run: NODE_ENV=test npm run test:integration

  push-dockerhub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        run: |
          docker buildx create --use
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:prod .
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:latest .
          docker buildx build --file Dockerfile --platform linux/arm64,linux/amd64 --push --tag ${{ secrets.DOCKER_USERNAME }}/life-tracker-backend:${{ github.sha }} .

  push-devops:
    needs: [build, test-unit, test-integration, push-dockerhub]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      - name: Replace image tag in deployment.yaml
        run: |
          sed -i "s/\${GITHUB_SHA}/${{ github.sha }}/g" k8s/prod/deployment.yaml
      - name: Commit changes
        run: |
          git add k8s/prod/*
          git commit -m "${{ github.sha }}"
      - name: Checkout LifeTrackerBackend-DevOps
        uses: actions/checkout@v2
        with:
          repository: "rhaversen/LifeTrackerBackend-DevOps"
          token: ${{ secrets.DEVOPS_REPO_TOKEN }}
          path: "LifeTrackerBackend-DevOps"
      - name: Copy files to LifeTrackerBackend-DevOps
        run: |
          cp -r k8s/prod/* LifeTrackerBackend-DevOps/k8s/prod/
      - name: Push changes to LifeTrackerBackend-DevOps
        run: |
          cd LifeTrackerBackend-DevOps
          git add k8s/prod/*
          git commit -m "Production: ${{ github.sha }}"
          git push origin HEAD
